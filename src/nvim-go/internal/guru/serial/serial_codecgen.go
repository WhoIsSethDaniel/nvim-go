// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package serial

import (
	"errors"
	"fmt"
	codec1978 "github.com/ugorji/go/codec"
	"reflect"
	"runtime"
	"unsafe"
)

const (
	// ----- content types ----
	codecSelferC_UTF89549 = 1
	codecSelferC_RAW9549  = 0
	// ----- value types used ----
	codecSelferValueTypeArray9549 = 10
	codecSelferValueTypeMap9549   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey9549    = 2
	codecSelfer_containerMapValue9549  = 3
	codecSelfer_containerMapEnd9549    = 4
	codecSelfer_containerArrayElem9549 = 6
	codecSelfer_containerArrayEnd9549  = 7
)

var (
	codecSelferBitsize9549                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr9549 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelferUnsafeString9549 struct {
	Data uintptr
	Len  int
}

type codecSelfer9549 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 unsafe.Pointer
		_ = v0
	}
}

func (x *Peers) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [6]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[2] = len(x.Allocs) != 0
			yyq2[3] = len(x.Sends) != 0
			yyq2[4] = len(x.Receives) != 0
			yyq2[5] = len(x.Closes) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(6)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					if x.Allocs == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else {
							z.F.EncSliceStringV(x.Allocs, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("allocs"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Allocs == nil {
						r.EncodeNil()
					} else {
						yym11 := z.EncBinary()
						_ = yym11
						if false {
						} else {
							z.F.EncSliceStringV(x.Allocs, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					if x.Sends == nil {
						r.EncodeNil()
					} else {
						yym13 := z.EncBinary()
						_ = yym13
						if false {
						} else {
							z.F.EncSliceStringV(x.Sends, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("sends"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Sends == nil {
						r.EncodeNil()
					} else {
						yym14 := z.EncBinary()
						_ = yym14
						if false {
						} else {
							z.F.EncSliceStringV(x.Sends, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[4] {
					if x.Receives == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							z.F.EncSliceStringV(x.Receives, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("receives"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Receives == nil {
						r.EncodeNil()
					} else {
						yym17 := z.EncBinary()
						_ = yym17
						if false {
						} else {
							z.F.EncSliceStringV(x.Receives, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[5] {
					if x.Closes == nil {
						r.EncodeNil()
					} else {
						yym19 := z.EncBinary()
						_ = yym19
						if false {
						} else {
							z.F.EncSliceStringV(x.Closes, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("closes"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Closes == nil {
						r.EncodeNil()
					} else {
						yym20 := z.EncBinary()
						_ = yym20
						if false {
						} else {
							z.F.EncSliceStringV(x.Closes, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Peers) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Peers) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv6 := &x.Type
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "allocs":
			if r.TryDecodeAsNil() {
				x.Allocs = nil
			} else {
				yyv8 := &x.Allocs
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					z.F.DecSliceStringX(yyv8, false, d)
				}
			}
		case "sends":
			if r.TryDecodeAsNil() {
				x.Sends = nil
			} else {
				yyv10 := &x.Sends
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					z.F.DecSliceStringX(yyv10, false, d)
				}
			}
		case "receives":
			if r.TryDecodeAsNil() {
				x.Receives = nil
			} else {
				yyv12 := &x.Receives
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					z.F.DecSliceStringX(yyv12, false, d)
				}
			}
		case "closes":
			if r.TryDecodeAsNil() {
				x.Closes = nil
			} else {
				yyv14 := &x.Closes
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					z.F.DecSliceStringX(yyv14, false, d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Peers) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj16 int
	var yyb16 bool
	var yyhl16 bool = l >= 0
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv17 := &x.Pos
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv19 := &x.Type
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			*((*string)(yyv19)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Allocs = nil
	} else {
		yyv21 := &x.Allocs
		yym22 := z.DecBinary()
		_ = yym22
		if false {
		} else {
			z.F.DecSliceStringX(yyv21, false, d)
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Sends = nil
	} else {
		yyv23 := &x.Sends
		yym24 := z.DecBinary()
		_ = yym24
		if false {
		} else {
			z.F.DecSliceStringX(yyv23, false, d)
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Receives = nil
	} else {
		yyv25 := &x.Receives
		yym26 := z.DecBinary()
		_ = yym26
		if false {
		} else {
			z.F.DecSliceStringX(yyv25, false, d)
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Closes = nil
	} else {
		yyv27 := &x.Closes
		yym28 := z.DecBinary()
		_ = yym28
		if false {
		} else {
			z.F.DecSliceStringX(yyv27, false, d)
		}
	}
	for {
		yyj16++
		if yyhl16 {
			yyb16 = yyj16 > l
		} else {
			yyb16 = r.CheckBreak()
		}
		if yyb16 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj16-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *ReferrersInitial) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.ObjPos != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("objpos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *ReferrersInitial) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *ReferrersInitial) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "objpos":
			if r.TryDecodeAsNil() {
				x.ObjPos = ""
			} else {
				yyv4 := &x.ObjPos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv6 := &x.Desc
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *ReferrersInitial) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.ObjPos = ""
	} else {
		yyv9 := &x.ObjPos
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv11 := &x.Desc
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *ReferrersPackage) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Package))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("package"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Package))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if x.Refs == nil {
					r.EncodeNil()
				} else {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						h.encSliceRef(([]Ref)(x.Refs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("refs"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				if x.Refs == nil {
					r.EncodeNil()
				} else {
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						h.encSliceRef(([]Ref)(x.Refs), e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *ReferrersPackage) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *ReferrersPackage) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "package":
			if r.TryDecodeAsNil() {
				x.Package = ""
			} else {
				yyv4 := &x.Package
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "refs":
			if r.TryDecodeAsNil() {
				x.Refs = nil
			} else {
				yyv6 := &x.Refs
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					h.decSliceRef((*[]Ref)(yyv6), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *ReferrersPackage) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Package = ""
	} else {
		yyv9 := &x.Package
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Refs = nil
	} else {
		yyv11 := &x.Refs
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			h.decSliceRef((*[]Ref)(yyv11), d)
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Ref) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Text))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("text"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Text))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Ref) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Ref) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "text":
			if r.TryDecodeAsNil() {
				x.Text = ""
			} else {
				yyv6 := &x.Text
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Ref) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv9 := &x.Pos
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Text = ""
	} else {
		yyv11 := &x.Text
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Definition) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.ObjPos != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("objpos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Definition) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Definition) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "objpos":
			if r.TryDecodeAsNil() {
				x.ObjPos = ""
			} else {
				yyv4 := &x.ObjPos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv6 := &x.Desc
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Definition) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.ObjPos = ""
	} else {
		yyv9 := &x.ObjPos
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv11 := &x.Desc
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Callees) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if x.Callees == nil {
					r.EncodeNil()
				} else {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						h.encSlicePtrtoCallee(([]*Callee)(x.Callees), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("callees"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				if x.Callees == nil {
					r.EncodeNil()
				} else {
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						h.encSlicePtrtoCallee(([]*Callee)(x.Callees), e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Callees) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Callees) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv6 := &x.Desc
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "callees":
			if r.TryDecodeAsNil() {
				x.Callees = nil
			} else {
				yyv8 := &x.Callees
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					h.decSlicePtrtoCallee((*[]*Callee)(yyv8), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Callees) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv11 := &x.Pos
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv13 := &x.Desc
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Callees = nil
	} else {
		yyv15 := &x.Callees
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			h.decSlicePtrtoCallee((*[]*Callee)(yyv15), d)
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Callee) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Callee) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Callee) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				yyv4 := &x.Name
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv6 := &x.Pos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Callee) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		yyv9 := &x.Name
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv11 := &x.Pos
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Caller) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Pos != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("pos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Caller))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("caller"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Caller))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Caller) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Caller) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv6 := &x.Desc
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "caller":
			if r.TryDecodeAsNil() {
				x.Caller = ""
			} else {
				yyv8 := &x.Caller
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Caller) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv11 := &x.Pos
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv13 := &x.Desc
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Caller = ""
	} else {
		yyv15 := &x.Caller
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *CallStack) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Target))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("target"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Target))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if x.Callers == nil {
					r.EncodeNil()
				} else {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						h.encSliceCaller(([]Caller)(x.Callers), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("callers"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				if x.Callers == nil {
					r.EncodeNil()
				} else {
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						h.encSliceCaller(([]Caller)(x.Callers), e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *CallStack) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *CallStack) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "target":
			if r.TryDecodeAsNil() {
				x.Target = ""
			} else {
				yyv6 := &x.Target
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "callers":
			if r.TryDecodeAsNil() {
				x.Callers = nil
			} else {
				yyv8 := &x.Callers
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					h.decSliceCaller((*[]Caller)(yyv8), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *CallStack) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv11 := &x.Pos
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Target = ""
	} else {
		yyv13 := &x.Target
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Callers = nil
	} else {
		yyv15 := &x.Callers
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			h.decSliceCaller((*[]Caller)(yyv15), d)
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *FreeVar) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 4
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("kind"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Ref))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("ref"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Ref))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym13 := z.EncBinary()
				_ = yym13
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym14 := z.EncBinary()
				_ = yym14
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *FreeVar) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *FreeVar) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv6 := &x.Kind
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "ref":
			if r.TryDecodeAsNil() {
				x.Ref = ""
			} else {
				yyv8 := &x.Ref
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv10 := &x.Type
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *FreeVar) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv13 := &x.Pos
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv15 := &x.Kind
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Ref = ""
	} else {
		yyv17 := &x.Ref
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv19 := &x.Type
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			*((*string)(yyv19)) = r.DecodeString()
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Implements) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [8]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = true
			yyq2[1] = len(x.AssignableTo) != 0
			yyq2[2] = len(x.AssignableFrom) != 0
			yyq2[3] = len(x.AssignableFromPtr) != 0
			yyq2[4] = x.Method != nil
			yyq2[5] = len(x.AssignableToMethod) != 0
			yyq2[6] = len(x.AssignableFromMethod) != 0
			yyq2[7] = len(x.AssignableFromPtrMethod) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(8)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yy4 := &x.T
					yy4.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("type"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yy6 := &x.T
					yy6.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					if x.AssignableTo == nil {
						r.EncodeNil()
					} else {
						yym9 := z.EncBinary()
						_ = yym9
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableTo), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("to"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableTo == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableTo), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					if x.AssignableFrom == nil {
						r.EncodeNil()
					} else {
						yym12 := z.EncBinary()
						_ = yym12
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableFrom), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("from"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableFrom == nil {
						r.EncodeNil()
					} else {
						yym13 := z.EncBinary()
						_ = yym13
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableFrom), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					if x.AssignableFromPtr == nil {
						r.EncodeNil()
					} else {
						yym15 := z.EncBinary()
						_ = yym15
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableFromPtr), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("fromptr"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableFromPtr == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							h.encSliceImplementsType(([]ImplementsType)(x.AssignableFromPtr), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[4] {
					if x.Method == nil {
						r.EncodeNil()
					} else {
						x.Method.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("method"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Method == nil {
						r.EncodeNil()
					} else {
						x.Method.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[5] {
					if x.AssignableToMethod == nil {
						r.EncodeNil()
					} else {
						yym21 := z.EncBinary()
						_ = yym21
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableToMethod), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("to_method"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableToMethod == nil {
						r.EncodeNil()
					} else {
						yym22 := z.EncBinary()
						_ = yym22
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableToMethod), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[6] {
					if x.AssignableFromMethod == nil {
						r.EncodeNil()
					} else {
						yym24 := z.EncBinary()
						_ = yym24
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableFromMethod), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("from_method"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableFromMethod == nil {
						r.EncodeNil()
					} else {
						yym25 := z.EncBinary()
						_ = yym25
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableFromMethod), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[7] {
					if x.AssignableFromPtrMethod == nil {
						r.EncodeNil()
					} else {
						yym27 := z.EncBinary()
						_ = yym27
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableFromPtrMethod), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("fromptr_method"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.AssignableFromPtrMethod == nil {
						r.EncodeNil()
					} else {
						yym28 := z.EncBinary()
						_ = yym28
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.AssignableFromPtrMethod), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Implements) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Implements) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "type":
			if r.TryDecodeAsNil() {
				x.T = ImplementsType{}
			} else {
				yyv4 := &x.T
				yyv4.CodecDecodeSelf(d)
			}
		case "to":
			if r.TryDecodeAsNil() {
				x.AssignableTo = nil
			} else {
				yyv5 := &x.AssignableTo
				yym6 := z.DecBinary()
				_ = yym6
				if false {
				} else {
					h.decSliceImplementsType((*[]ImplementsType)(yyv5), d)
				}
			}
		case "from":
			if r.TryDecodeAsNil() {
				x.AssignableFrom = nil
			} else {
				yyv7 := &x.AssignableFrom
				yym8 := z.DecBinary()
				_ = yym8
				if false {
				} else {
					h.decSliceImplementsType((*[]ImplementsType)(yyv7), d)
				}
			}
		case "fromptr":
			if r.TryDecodeAsNil() {
				x.AssignableFromPtr = nil
			} else {
				yyv9 := &x.AssignableFromPtr
				yym10 := z.DecBinary()
				_ = yym10
				if false {
				} else {
					h.decSliceImplementsType((*[]ImplementsType)(yyv9), d)
				}
			}
		case "method":
			if r.TryDecodeAsNil() {
				if x.Method != nil {
					x.Method = nil
				}
			} else {
				if x.Method == nil {
					x.Method = new(DescribeMethod)
				}
				x.Method.CodecDecodeSelf(d)
			}
		case "to_method":
			if r.TryDecodeAsNil() {
				x.AssignableToMethod = nil
			} else {
				yyv12 := &x.AssignableToMethod
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					h.decSliceDescribeMethod((*[]DescribeMethod)(yyv12), d)
				}
			}
		case "from_method":
			if r.TryDecodeAsNil() {
				x.AssignableFromMethod = nil
			} else {
				yyv14 := &x.AssignableFromMethod
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					h.decSliceDescribeMethod((*[]DescribeMethod)(yyv14), d)
				}
			}
		case "fromptr_method":
			if r.TryDecodeAsNil() {
				x.AssignableFromPtrMethod = nil
			} else {
				yyv16 := &x.AssignableFromPtrMethod
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else {
					h.decSliceDescribeMethod((*[]DescribeMethod)(yyv16), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Implements) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj18 int
	var yyb18 bool
	var yyhl18 bool = l >= 0
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.T = ImplementsType{}
	} else {
		yyv19 := &x.T
		yyv19.CodecDecodeSelf(d)
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableTo = nil
	} else {
		yyv20 := &x.AssignableTo
		yym21 := z.DecBinary()
		_ = yym21
		if false {
		} else {
			h.decSliceImplementsType((*[]ImplementsType)(yyv20), d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableFrom = nil
	} else {
		yyv22 := &x.AssignableFrom
		yym23 := z.DecBinary()
		_ = yym23
		if false {
		} else {
			h.decSliceImplementsType((*[]ImplementsType)(yyv22), d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableFromPtr = nil
	} else {
		yyv24 := &x.AssignableFromPtr
		yym25 := z.DecBinary()
		_ = yym25
		if false {
		} else {
			h.decSliceImplementsType((*[]ImplementsType)(yyv24), d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		if x.Method != nil {
			x.Method = nil
		}
	} else {
		if x.Method == nil {
			x.Method = new(DescribeMethod)
		}
		x.Method.CodecDecodeSelf(d)
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableToMethod = nil
	} else {
		yyv27 := &x.AssignableToMethod
		yym28 := z.DecBinary()
		_ = yym28
		if false {
		} else {
			h.decSliceDescribeMethod((*[]DescribeMethod)(yyv27), d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableFromMethod = nil
	} else {
		yyv29 := &x.AssignableFromMethod
		yym30 := z.DecBinary()
		_ = yym30
		if false {
		} else {
			h.decSliceDescribeMethod((*[]DescribeMethod)(yyv29), d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.AssignableFromPtrMethod = nil
	} else {
		yyv31 := &x.AssignableFromPtrMethod
		yym32 := z.DecBinary()
		_ = yym32
		if false {
		} else {
			h.decSliceDescribeMethod((*[]DescribeMethod)(yyv31), d)
		}
	}
	for {
		yyj18++
		if yyhl18 {
			yyb18 = yyj18 > l
		} else {
			yyb18 = r.CheckBreak()
		}
		if yyb18 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj18-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *ImplementsType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("kind"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *ImplementsType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *ImplementsType) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				yyv4 := &x.Name
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv6 := &x.Pos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv8 := &x.Kind
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *ImplementsType) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		yyv11 := &x.Name
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv13 := &x.Pos
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv15 := &x.Kind
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *SyntaxNode) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Description))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Description))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeInt(int64(x.Start))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("start"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeInt(int64(x.Start))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeInt(int64(x.End))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("end"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeInt(int64(x.End))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *SyntaxNode) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *SyntaxNode) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "desc":
			if r.TryDecodeAsNil() {
				x.Description = ""
			} else {
				yyv4 := &x.Description
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "start":
			if r.TryDecodeAsNil() {
				x.Start = 0
			} else {
				yyv6 := &x.Start
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*int)(yyv6)) = int(r.DecodeInt(codecSelferBitsize9549))
				}
			}
		case "end":
			if r.TryDecodeAsNil() {
				x.End = 0
			} else {
				yyv8 := &x.End
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*int)(yyv8)) = int(r.DecodeInt(codecSelferBitsize9549))
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *SyntaxNode) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Description = ""
	} else {
		yyv11 := &x.Description
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Start = 0
	} else {
		yyv13 := &x.Start
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*int)(yyv13)) = int(r.DecodeInt(codecSelferBitsize9549))
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.End = 0
	} else {
		yyv15 := &x.End
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*int)(yyv15)) = int(r.DecodeInt(codecSelferBitsize9549))
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *What) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [6]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[2] = x.SrcDir != ""
			yyq2[3] = x.ImportPath != ""
			yyq2[4] = x.Object != ""
			yyq2[5] = len(x.SameIDs) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(6)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if x.Enclosing == nil {
					r.EncodeNil()
				} else {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						h.encSliceSyntaxNode(([]SyntaxNode)(x.Enclosing), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("enclosing"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				if x.Enclosing == nil {
					r.EncodeNil()
				} else {
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						h.encSliceSyntaxNode(([]SyntaxNode)(x.Enclosing), e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if x.Modes == nil {
					r.EncodeNil()
				} else {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						z.F.EncSliceStringV(x.Modes, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("modes"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				if x.Modes == nil {
					r.EncodeNil()
				} else {
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						z.F.EncSliceStringV(x.Modes, false, e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.SrcDir))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("srcdir"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.SrcDir))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ImportPath))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("importpath"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ImportPath))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[4] {
					yym16 := z.EncBinary()
					_ = yym16
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Object))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("object"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym17 := z.EncBinary()
					_ = yym17
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Object))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[5] {
					if x.SameIDs == nil {
						r.EncodeNil()
					} else {
						yym19 := z.EncBinary()
						_ = yym19
						if false {
						} else {
							z.F.EncSliceStringV(x.SameIDs, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("sameids"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.SameIDs == nil {
						r.EncodeNil()
					} else {
						yym20 := z.EncBinary()
						_ = yym20
						if false {
						} else {
							z.F.EncSliceStringV(x.SameIDs, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *What) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *What) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "enclosing":
			if r.TryDecodeAsNil() {
				x.Enclosing = nil
			} else {
				yyv4 := &x.Enclosing
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					h.decSliceSyntaxNode((*[]SyntaxNode)(yyv4), d)
				}
			}
		case "modes":
			if r.TryDecodeAsNil() {
				x.Modes = nil
			} else {
				yyv6 := &x.Modes
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					z.F.DecSliceStringX(yyv6, false, d)
				}
			}
		case "srcdir":
			if r.TryDecodeAsNil() {
				x.SrcDir = ""
			} else {
				yyv8 := &x.SrcDir
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "importpath":
			if r.TryDecodeAsNil() {
				x.ImportPath = ""
			} else {
				yyv10 := &x.ImportPath
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "object":
			if r.TryDecodeAsNil() {
				x.Object = ""
			} else {
				yyv12 := &x.Object
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					*((*string)(yyv12)) = r.DecodeString()
				}
			}
		case "sameids":
			if r.TryDecodeAsNil() {
				x.SameIDs = nil
			} else {
				yyv14 := &x.SameIDs
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					z.F.DecSliceStringX(yyv14, false, d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *What) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj16 int
	var yyb16 bool
	var yyhl16 bool = l >= 0
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Enclosing = nil
	} else {
		yyv17 := &x.Enclosing
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			h.decSliceSyntaxNode((*[]SyntaxNode)(yyv17), d)
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Modes = nil
	} else {
		yyv19 := &x.Modes
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			z.F.DecSliceStringX(yyv19, false, d)
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.SrcDir = ""
	} else {
		yyv21 := &x.SrcDir
		yym22 := z.DecBinary()
		_ = yym22
		if false {
		} else {
			*((*string)(yyv21)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.ImportPath = ""
	} else {
		yyv23 := &x.ImportPath
		yym24 := z.DecBinary()
		_ = yym24
		if false {
		} else {
			*((*string)(yyv23)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Object = ""
	} else {
		yyv25 := &x.Object
		yym26 := z.DecBinary()
		_ = yym26
		if false {
		} else {
			*((*string)(yyv25)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.SameIDs = nil
	} else {
		yyv27 := &x.SameIDs
		yym28 := z.DecBinary()
		_ = yym28
		if false {
		} else {
			z.F.DecSliceStringX(yyv27, false, d)
		}
	}
	for {
		yyj16++
		if yyhl16 {
			yyb16 = yyj16 > l
		} else {
			yyb16 = r.CheckBreak()
		}
		if yyb16 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj16-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *PointsToLabel) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *PointsToLabel) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *PointsToLabel) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv4 := &x.Pos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv6 := &x.Desc
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *PointsToLabel) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv9 := &x.Pos
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv11 := &x.Desc
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *PointsTo) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = x.NamePos != ""
			yyq2[2] = len(x.Labels) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NamePos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("namepos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NamePos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else {
							h.encSlicePointsToLabel(([]PointsToLabel)(x.Labels), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym11 := z.EncBinary()
						_ = yym11
						if false {
						} else {
							h.encSlicePointsToLabel(([]PointsToLabel)(x.Labels), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *PointsTo) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *PointsTo) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "namepos":
			if r.TryDecodeAsNil() {
				x.NamePos = ""
			} else {
				yyv6 := &x.NamePos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv8 := &x.Labels
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					h.decSlicePointsToLabel((*[]PointsToLabel)(yyv8), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *PointsTo) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv11 := &x.Type
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.NamePos = ""
	} else {
		yyv13 := &x.NamePos
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv15 := &x.Labels
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			h.decSlicePointsToLabel((*[]PointsToLabel)(yyv15), d)
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *DescribeValue) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = x.Value != ""
			yyq2[2] = x.ObjPos != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Value))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("value"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Value))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("objpos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ObjPos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *DescribeValue) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *DescribeValue) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "value":
			if r.TryDecodeAsNil() {
				x.Value = ""
			} else {
				yyv6 := &x.Value
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "objpos":
			if r.TryDecodeAsNil() {
				x.ObjPos = ""
			} else {
				yyv8 := &x.ObjPos
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *DescribeValue) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv11 := &x.Type
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Value = ""
	} else {
		yyv13 := &x.Value
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.ObjPos = ""
	} else {
		yyv15 := &x.ObjPos
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *DescribeMethod) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *DescribeMethod) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *DescribeMethod) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				yyv4 := &x.Name
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv6 := &x.Pos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *DescribeMethod) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		yyv9 := &x.Name
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv11 := &x.Pos
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *DescribeType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = x.NamePos != ""
			yyq2[2] = x.NameDef != ""
			yyq2[3] = len(x.Methods) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NamePos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("namepos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NamePos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NameDef))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("namedef"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.NameDef))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					if x.Methods == nil {
						r.EncodeNil()
					} else {
						yym13 := z.EncBinary()
						_ = yym13
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.Methods), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("methods"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Methods == nil {
						r.EncodeNil()
					} else {
						yym14 := z.EncBinary()
						_ = yym14
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.Methods), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *DescribeType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *DescribeType) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "namepos":
			if r.TryDecodeAsNil() {
				x.NamePos = ""
			} else {
				yyv6 := &x.NamePos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "namedef":
			if r.TryDecodeAsNil() {
				x.NameDef = ""
			} else {
				yyv8 := &x.NameDef
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "methods":
			if r.TryDecodeAsNil() {
				x.Methods = nil
			} else {
				yyv10 := &x.Methods
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					h.decSliceDescribeMethod((*[]DescribeMethod)(yyv10), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *DescribeType) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv13 := &x.Type
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.NamePos = ""
	} else {
		yyv15 := &x.NamePos
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.NameDef = ""
	} else {
		yyv17 := &x.NameDef
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Methods = nil
	} else {
		yyv19 := &x.Methods
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			h.decSliceDescribeMethod((*[]DescribeMethod)(yyv19), d)
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *DescribeMember) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [6]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = x.Type != ""
			yyq2[2] = x.Value != ""
			yyq2[5] = len(x.Methods) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(6)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("name"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Name))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Type))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("type"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Type))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Value))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("value"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Value))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym13 := z.EncBinary()
				_ = yym13
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym14 := z.EncBinary()
				_ = yym14
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym16 := z.EncBinary()
				_ = yym16
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("kind"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym17 := z.EncBinary()
				_ = yym17
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Kind))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[5] {
					if x.Methods == nil {
						r.EncodeNil()
					} else {
						yym19 := z.EncBinary()
						_ = yym19
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.Methods), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("methods"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Methods == nil {
						r.EncodeNil()
					} else {
						yym20 := z.EncBinary()
						_ = yym20
						if false {
						} else {
							h.encSliceDescribeMethod(([]DescribeMethod)(x.Methods), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *DescribeMember) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *DescribeMember) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				yyv4 := &x.Name
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv6 := &x.Type
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "value":
			if r.TryDecodeAsNil() {
				x.Value = ""
			} else {
				yyv8 := &x.Value
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv10 := &x.Pos
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				yyv12 := &x.Kind
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					*((*string)(yyv12)) = r.DecodeString()
				}
			}
		case "methods":
			if r.TryDecodeAsNil() {
				x.Methods = nil
			} else {
				yyv14 := &x.Methods
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					h.decSliceDescribeMethod((*[]DescribeMethod)(yyv14), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *DescribeMember) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj16 int
	var yyb16 bool
	var yyhl16 bool = l >= 0
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		yyv17 := &x.Name
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			*((*string)(yyv17)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv19 := &x.Type
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			*((*string)(yyv19)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Value = ""
	} else {
		yyv21 := &x.Value
		yym22 := z.DecBinary()
		_ = yym22
		if false {
		} else {
			*((*string)(yyv21)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv23 := &x.Pos
		yym24 := z.DecBinary()
		_ = yym24
		if false {
		} else {
			*((*string)(yyv23)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		yyv25 := &x.Kind
		yym26 := z.DecBinary()
		_ = yym26
		if false {
		} else {
			*((*string)(yyv25)) = r.DecodeString()
		}
	}
	yyj16++
	if yyhl16 {
		yyb16 = yyj16 > l
	} else {
		yyb16 = r.CheckBreak()
	}
	if yyb16 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Methods = nil
	} else {
		yyv27 := &x.Methods
		yym28 := z.DecBinary()
		_ = yym28
		if false {
		} else {
			h.decSliceDescribeMethod((*[]DescribeMethod)(yyv27), d)
		}
	}
	for {
		yyj16++
		if yyhl16 {
			yyb16 = yyj16 > l
		} else {
			yyb16 = r.CheckBreak()
		}
		if yyb16 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj16-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *DescribePackage) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = len(x.Members) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Path))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("path"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Path))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					if x.Members == nil {
						r.EncodeNil()
					} else {
						yym7 := z.EncBinary()
						_ = yym7
						if false {
						} else {
							h.encSlicePtrtoDescribeMember(([]*DescribeMember)(x.Members), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("members"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Members == nil {
						r.EncodeNil()
					} else {
						yym8 := z.EncBinary()
						_ = yym8
						if false {
						} else {
							h.encSlicePtrtoDescribeMember(([]*DescribeMember)(x.Members), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *DescribePackage) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *DescribePackage) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "path":
			if r.TryDecodeAsNil() {
				x.Path = ""
			} else {
				yyv4 := &x.Path
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "members":
			if r.TryDecodeAsNil() {
				x.Members = nil
			} else {
				yyv6 := &x.Members
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					h.decSlicePtrtoDescribeMember((*[]*DescribeMember)(yyv6), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *DescribePackage) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Path = ""
	} else {
		yyv9 := &x.Path
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Members = nil
	} else {
		yyv11 := &x.Members
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			h.decSlicePtrtoDescribeMember((*[]*DescribeMember)(yyv11), d)
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *Describe) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [6]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[2] = x.Detail != ""
			yyq2[3] = x.Package != nil
			yyq2[4] = x.Type != nil
			yyq2[5] = x.Value != nil
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(6)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("desc"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Desc))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey9549)
				r.EncodeString(codecSelferC_UTF89549, string("pos"))
				z.EncSendContainerState(codecSelfer_containerMapValue9549)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF89549, string(x.Pos))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Detail))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("detail"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Detail))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					if x.Package == nil {
						r.EncodeNil()
					} else {
						x.Package.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("package"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Package == nil {
						r.EncodeNil()
					} else {
						x.Package.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[4] {
					if x.Type == nil {
						r.EncodeNil()
					} else {
						x.Type.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("type"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Type == nil {
						r.EncodeNil()
					} else {
						x.Type.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[5] {
					if x.Value == nil {
						r.EncodeNil()
					} else {
						x.Value.CodecEncodeSelf(e)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("value"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Value == nil {
						r.EncodeNil()
					} else {
						x.Value.CodecEncodeSelf(e)
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *Describe) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *Describe) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "desc":
			if r.TryDecodeAsNil() {
				x.Desc = ""
			} else {
				yyv4 := &x.Desc
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "pos":
			if r.TryDecodeAsNil() {
				x.Pos = ""
			} else {
				yyv6 := &x.Pos
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "detail":
			if r.TryDecodeAsNil() {
				x.Detail = ""
			} else {
				yyv8 := &x.Detail
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "package":
			if r.TryDecodeAsNil() {
				if x.Package != nil {
					x.Package = nil
				}
			} else {
				if x.Package == nil {
					x.Package = new(DescribePackage)
				}
				x.Package.CodecDecodeSelf(d)
			}
		case "type":
			if r.TryDecodeAsNil() {
				if x.Type != nil {
					x.Type = nil
				}
			} else {
				if x.Type == nil {
					x.Type = new(DescribeType)
				}
				x.Type.CodecDecodeSelf(d)
			}
		case "value":
			if r.TryDecodeAsNil() {
				if x.Value != nil {
					x.Value = nil
				}
			} else {
				if x.Value == nil {
					x.Value = new(DescribeValue)
				}
				x.Value.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *Describe) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj13 int
	var yyb13 bool
	var yyhl13 bool = l >= 0
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Desc = ""
	} else {
		yyv14 := &x.Desc
		yym15 := z.DecBinary()
		_ = yym15
		if false {
		} else {
			*((*string)(yyv14)) = r.DecodeString()
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Pos = ""
	} else {
		yyv16 := &x.Pos
		yym17 := z.DecBinary()
		_ = yym17
		if false {
		} else {
			*((*string)(yyv16)) = r.DecodeString()
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Detail = ""
	} else {
		yyv18 := &x.Detail
		yym19 := z.DecBinary()
		_ = yym19
		if false {
		} else {
			*((*string)(yyv18)) = r.DecodeString()
		}
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		if x.Package != nil {
			x.Package = nil
		}
	} else {
		if x.Package == nil {
			x.Package = new(DescribePackage)
		}
		x.Package.CodecDecodeSelf(d)
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		if x.Type != nil {
			x.Type = nil
		}
	} else {
		if x.Type == nil {
			x.Type = new(DescribeType)
		}
		x.Type.CodecDecodeSelf(d)
	}
	yyj13++
	if yyhl13 {
		yyb13 = yyj13 > l
	} else {
		yyb13 = r.CheckBreak()
	}
	if yyb13 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		if x.Value != nil {
			x.Value = nil
		}
	} else {
		if x.Value == nil {
			x.Value = new(DescribeValue)
		}
		x.Value.CodecDecodeSelf(d)
	}
	for {
		yyj13++
		if yyhl13 {
			yyb13 = yyj13 > l
		} else {
			yyb13 = r.CheckBreak()
		}
		if yyb13 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj13-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *WhichErrs) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [4]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.ErrPos != ""
			yyq2[1] = len(x.Globals) != 0
			yyq2[2] = len(x.Constants) != 0
			yyq2[3] = len(x.Types) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(4)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ErrPos))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("errpos"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.ErrPos))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					if x.Globals == nil {
						r.EncodeNil()
					} else {
						yym7 := z.EncBinary()
						_ = yym7
						if false {
						} else {
							z.F.EncSliceStringV(x.Globals, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("globals"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Globals == nil {
						r.EncodeNil()
					} else {
						yym8 := z.EncBinary()
						_ = yym8
						if false {
						} else {
							z.F.EncSliceStringV(x.Globals, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[2] {
					if x.Constants == nil {
						r.EncodeNil()
					} else {
						yym10 := z.EncBinary()
						_ = yym10
						if false {
						} else {
							z.F.EncSliceStringV(x.Constants, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("constants"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Constants == nil {
						r.EncodeNil()
					} else {
						yym11 := z.EncBinary()
						_ = yym11
						if false {
						} else {
							z.F.EncSliceStringV(x.Constants, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[3] {
					if x.Types == nil {
						r.EncodeNil()
					} else {
						yym13 := z.EncBinary()
						_ = yym13
						if false {
						} else {
							h.encSliceWhichErrsType(([]WhichErrsType)(x.Types), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("types"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					if x.Types == nil {
						r.EncodeNil()
					} else {
						yym14 := z.EncBinary()
						_ = yym14
						if false {
						} else {
							h.encSliceWhichErrsType(([]WhichErrsType)(x.Types), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *WhichErrs) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *WhichErrs) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "errpos":
			if r.TryDecodeAsNil() {
				x.ErrPos = ""
			} else {
				yyv4 := &x.ErrPos
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "globals":
			if r.TryDecodeAsNil() {
				x.Globals = nil
			} else {
				yyv6 := &x.Globals
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					z.F.DecSliceStringX(yyv6, false, d)
				}
			}
		case "constants":
			if r.TryDecodeAsNil() {
				x.Constants = nil
			} else {
				yyv8 := &x.Constants
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					z.F.DecSliceStringX(yyv8, false, d)
				}
			}
		case "types":
			if r.TryDecodeAsNil() {
				x.Types = nil
			} else {
				yyv10 := &x.Types
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					h.decSliceWhichErrsType((*[]WhichErrsType)(yyv10), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *WhichErrs) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj12 int
	var yyb12 bool
	var yyhl12 bool = l >= 0
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.ErrPos = ""
	} else {
		yyv13 := &x.ErrPos
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Globals = nil
	} else {
		yyv15 := &x.Globals
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			z.F.DecSliceStringX(yyv15, false, d)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Constants = nil
	} else {
		yyv17 := &x.Constants
		yym18 := z.DecBinary()
		_ = yym18
		if false {
		} else {
			z.F.DecSliceStringX(yyv17, false, d)
		}
	}
	yyj12++
	if yyhl12 {
		yyb12 = yyj12 > l
	} else {
		yyb12 = r.CheckBreak()
	}
	if yyb12 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Types = nil
	} else {
		yyv19 := &x.Types
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else {
			h.decSliceWhichErrsType((*[]WhichErrsType)(yyv19), d)
		}
	}
	for {
		yyj12++
		if yyhl12 {
			yyb12 = yyj12 > l
		} else {
			yyb12 = r.CheckBreak()
		}
		if yyb12 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj12-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x *WhichErrsType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Type != ""
			yyq2[1] = x.Position != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 0
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Type))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("type"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Type))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem9549)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Position))
					}
				} else {
					r.EncodeString(codecSelferC_UTF89549, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey9549)
					r.EncodeString(codecSelferC_UTF89549, string("position"))
					z.EncSendContainerState(codecSelfer_containerMapValue9549)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF89549, string(x.Position))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd9549)
			}
		}
	}
}

func (x *WhichErrsType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap9549 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd9549)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray9549 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr9549)
		}
	}
}

func (x *WhichErrsType) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey9549)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3SlcHdr := codecSelferUnsafeString9549{uintptr(unsafe.Pointer(&yys3Slc[0])), len(yys3Slc)}
		yys3 := *(*string)(unsafe.Pointer(&yys3SlcHdr))
		z.DecSendContainerState(codecSelfer_containerMapValue9549)
		switch yys3 {
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else {
					*((*string)(yyv4)) = r.DecodeString()
				}
			}
		case "position":
			if r.TryDecodeAsNil() {
				x.Position = ""
			} else {
				yyv6 := &x.Position
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd9549)
}

func (x *WhichErrsType) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		yyv9 := &x.Type
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else {
			*((*string)(yyv9)) = r.DecodeString()
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem9549)
	if r.TryDecodeAsNil() {
		x.Position = ""
	} else {
		yyv11 := &x.Position
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*string)(yyv11)) = r.DecodeString()
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem9549)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) encSliceRef(v []Ref, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceRef(v *[]Ref, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []Ref{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 32)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]Ref, yyrl1)
				}
			} else {
				yyv1 = make([]Ref, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = Ref{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, Ref{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Ref{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, Ref{}) // var yyz1 Ref
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Ref{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []Ref{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSlicePtrtoCallee(v []*Callee, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		if yyv1 == nil {
			r.EncodeNil()
		} else {
			yyv1.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSlicePtrtoCallee(v *[]*Callee, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []*Callee{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]*Callee, yyrl1)
				}
			} else {
				yyv1 = make([]*Callee, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				if yyv1[yyj1] != nil {
					*yyv1[yyj1] = Callee{}
				}
			} else {
				if yyv1[yyj1] == nil {
					yyv1[yyj1] = new(Callee)
				}
				yyw2 := yyv1[yyj1]
				yyw2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, nil)
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = Callee{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(Callee)
					}
					yyw3 := yyv1[yyj1]
					yyw3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, nil) // var yyz1 *Callee
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = Callee{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(Callee)
					}
					yyw4 := yyv1[yyj1]
					yyw4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []*Callee{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSliceCaller(v []Caller, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceCaller(v *[]Caller, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []Caller{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 48)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]Caller, yyrl1)
				}
			} else {
				yyv1 = make([]Caller, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = Caller{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, Caller{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Caller{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, Caller{}) // var yyz1 Caller
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = Caller{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []Caller{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSliceImplementsType(v []ImplementsType, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceImplementsType(v *[]ImplementsType, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []ImplementsType{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 48)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]ImplementsType, yyrl1)
				}
			} else {
				yyv1 = make([]ImplementsType, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = ImplementsType{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, ImplementsType{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = ImplementsType{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, ImplementsType{}) // var yyz1 ImplementsType
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = ImplementsType{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []ImplementsType{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSliceDescribeMethod(v []DescribeMethod, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceDescribeMethod(v *[]DescribeMethod, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []DescribeMethod{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 32)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]DescribeMethod, yyrl1)
				}
			} else {
				yyv1 = make([]DescribeMethod, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = DescribeMethod{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, DescribeMethod{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = DescribeMethod{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, DescribeMethod{}) // var yyz1 DescribeMethod
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = DescribeMethod{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []DescribeMethod{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSliceSyntaxNode(v []SyntaxNode, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceSyntaxNode(v *[]SyntaxNode, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []SyntaxNode{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 32)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]SyntaxNode, yyrl1)
				}
			} else {
				yyv1 = make([]SyntaxNode, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = SyntaxNode{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, SyntaxNode{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = SyntaxNode{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, SyntaxNode{}) // var yyz1 SyntaxNode
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = SyntaxNode{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []SyntaxNode{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSlicePointsToLabel(v []PointsToLabel, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSlicePointsToLabel(v *[]PointsToLabel, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []PointsToLabel{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 32)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]PointsToLabel, yyrl1)
				}
			} else {
				yyv1 = make([]PointsToLabel, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = PointsToLabel{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, PointsToLabel{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = PointsToLabel{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, PointsToLabel{}) // var yyz1 PointsToLabel
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = PointsToLabel{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []PointsToLabel{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSlicePtrtoDescribeMember(v []*DescribeMember, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		if yyv1 == nil {
			r.EncodeNil()
		} else {
			yyv1.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSlicePtrtoDescribeMember(v *[]*DescribeMember, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []*DescribeMember{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]*DescribeMember, yyrl1)
				}
			} else {
				yyv1 = make([]*DescribeMember, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				if yyv1[yyj1] != nil {
					*yyv1[yyj1] = DescribeMember{}
				}
			} else {
				if yyv1[yyj1] == nil {
					yyv1[yyj1] = new(DescribeMember)
				}
				yyw2 := yyv1[yyj1]
				yyw2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, nil)
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = DescribeMember{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(DescribeMember)
					}
					yyw3 := yyv1[yyj1]
					yyw3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, nil) // var yyz1 *DescribeMember
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					if yyv1[yyj1] != nil {
						*yyv1[yyj1] = DescribeMember{}
					}
				} else {
					if yyv1[yyj1] == nil {
						yyv1[yyj1] = new(DescribeMember)
					}
					yyw4 := yyv1[yyj1]
					yyw4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []*DescribeMember{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer9549) encSliceWhichErrsType(v []WhichErrsType, e *codec1978.Encoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem9549)
		yy2 := &yyv1
		yy2.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd9549)
}

func (x codecSelfer9549) decSliceWhichErrsType(v *[]WhichErrsType, d *codec1978.Decoder) {
	var h codecSelfer9549
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []WhichErrsType{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 32)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]WhichErrsType, yyrl1)
				}
			} else {
				yyv1 = make([]WhichErrsType, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = WhichErrsType{}
			} else {
				yyv2 := &yyv1[yyj1]
				yyv2.CodecDecodeSelf(d)
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, WhichErrsType{})
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = WhichErrsType{}
				} else {
					yyv3 := &yyv1[yyj1]
					yyv3.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, WhichErrsType{}) // var yyz1 WhichErrsType
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = WhichErrsType{}
				} else {
					yyv4 := &yyv1[yyj1]
					yyv4.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []WhichErrsType{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}
