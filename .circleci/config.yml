version: 2

defaults: &defaults
  working_directory: /go/src/github.com/zchee/nvim-go

jobs:
  linux:
    docker:
      - image: golang:1.11.1-stretch
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install nvim binary
          command: |
            set -eux
            wget -q -O - https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz | tar xfz - --strip-components=1 -C '/usr/local'
            nvim --version
      - run:
          name: Install go dependencies tools
          command: |
            go get -u \
              github.com/constabulary/gb/cmd/... \
              github.com/rakyll/gotest
      - run:
          name: Take a coverage
          environment:
            GO_TEST: 'gotest'
          command: |
            make coverage/junit
      - run:
          name: Send coverage reports to codecov.io
          command: |
            bash <(curl -s https://codecov.io/bash) -Z -F linux -f coverage.out
      - store_test_results:
          path: _test-results

  macos:
    macos:
      xcode: "10.1.0"
    environment:
      PATH: "/Users/distiller/go/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
      GOPATH: "/Users/distiller/go"
      HOMEBREW_NO_AUTO_UPDATE: "1"
    working_directory: ~/go/src/github.com/zchee/nvim-go
    shell: /bin/bash --login -eux -o pipefail
    steps:
      - checkout
      - run:
          name: Install nvim binary
          command: |
            set -eux
            sudo mkdir -p /usr/local/libs
            curl -SL https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz | sudo tar xfz - --strip-components=1 -C '/usr/local'
      - run:
          name: install latest go
          command: |
            brew install https://github.com/Homebrew/homebrew-core/raw/master/Formula/go.rb || brew upgrade https://github.com/Homebrew/homebrew-core/raw/master/Formula/go.rb || true
      - run:
          name: Show versions
          command: |
            uname -a
            sw_vers
            xcodebuild -version
            system_profiler SPHardwareDataType
            nvim --version
            go version
      - run:
          name: Install go dependencies tools
          command: |
            go get -u \
              github.com/constabulary/gb/cmd/... \
              github.com/rakyll/gotest
      - run:
          name: Take a coverage
          environment:
            GO_TEST: 'gotest'
          command: |
            make coverage/junit
      - run:
          name: Send coverage reports to codecov.io
          shell: /bin/bash -eux -o pipefail
          command: |
            bash <(curl -s https://codecov.io/bash) -F darwin -f coverage.out
      - store_test_results:
          path: _test-results

  reviewdog:
    docker:
      - image: golang:1.11.1-stretch
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run reviewdog
          command: |
            go get -u github.com/haya14busa/reviewdog/cmd/reviewdog
            reviewdog -reporter="github-pr-review"

workflows:
  version: 2
  workflow:
    jobs:
      - linux:
          context: org-global
      - macos:
          context: org-global
      - reviewdog:
          context: org-global
          filters:
            branches:
              ignore: master
