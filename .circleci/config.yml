version: 2.1

orbs:
  golang: cci-orb/golang@volatile
  codecov: codecov/codecov@volatile

linux: &linux
  executor: golang/stretch
  environment:
    GO111MODULE: "on"
    GOPROXY: "https://proxy.golang.org"
    GOSUMDB: "sum.golang.org"
  working_directory: /go/src/github.com/zchee/nvim-go
darwin: &darwin
  executor: golang/macos
  working_directory: ~/go/src/github.com/zchee/nvim-go

jobs:
  linux:
    <<: *linux
    steps:
      - run:
          name: Show versions
          command: |
            uname -a
            echo
            cat /etc/os-release
            echo
            go version
      - checkout
      - golang/gomod-download:
          key: "gomod-linux"
      - run:
          name: Install nvim binary
          command: |
            curl -sSL https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz | tar xfz - --strip-components=1 -C '/usr/local'
            nvim --version
      - run:
          name: Install dependencies tools
          environment:
            GO111MODULE: "off"
          command: |
            go get -u github.com/constabulary/gb/cmd/...
      - run:
          name: Test and collect coverages
          command: |
            make coverage/ci
      - codecov/upload:
          file: "/tmp/ci/artifacts/coverage.out"
          flags: linux
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_test_results:
          path: /tmp/ci/test-results

  darwin:
    <<: *darwin
    steps:
      - checkout
      - golang/homebrew
      - run:
          name: Show versions
          command: |
            uname -a
            echo
            sw_vers
            echo
            xcodebuild -version
            echo
            system_profiler SPHardwareDataType
            echo
            go version
      - golang/gomod-download:
          key: "gomod-darwin"
          paths: "~/go/pkg/mod"
      - run:
          name: Install nvim binary
          command: |
            sudo mkdir -p /usr/local/libs
            curl -sSL https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz | sudo tar xfz - --strip-components=1 -C '/usr/local' || brew install https://github.com/Homebrew/homebrew-core/raw/master/Formula/neovim.rb --HEAD
            nvim --version
      - run:
          name: Install dependencies tools
          command: |
            go get -u github.com/constabulary/gb/cmd/...
      - run:
          name: Test and collect coverages
          environment:
            GO111MODULE: "on"
            GOPROXY: "https://proxy.golang.org"
            GOSUMDB: "sum.golang.org"
          command: |
            make coverage/ci
      - codecov/upload:
          file: "/tmp/ci/artifacts/coverage.out"
          flags: darwin
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_test_results:
          path: /tmp/ci/test-results

  lint:
    <<: *linux
    steps:
      - checkout
      - golang/gomod-download:
          key: "gomod-linux"
      - run:
          name: Run lint for sources
          command: |
            make lint

  reviewdog:
    <<: *linux
    steps:
      - checkout
      - golang/gomod-download:
          key: "gomod-linux"
      - run:
          name: Run reviewdog
          command: |
            go get -u github.com/reviewdog/reviewdog/cmd/reviewdog
            reviewdog -reporter="github-pr-check"

workflows:
  version: 2
  workflows:
    jobs:
      - linux:
          context: org-global
      - darwin:
          context: org-global
      - lint:
          context: org-global
      - reviewdog:
          context: org-global
          filters:
            branches:
              ignore: master
